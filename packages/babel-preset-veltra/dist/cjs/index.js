"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var m=require("@babel/preset-react"),u=require("@babel/helper-plugin-utils"),g=require("@babel/types");function v(l){var n=Object.create(null);return l&&Object.keys(l).forEach(function(s){if(s!=="default"){var r=Object.getOwnPropertyDescriptor(l,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return l[s]}})}}),n.default=l,Object.freeze(n)}var e=v(g);const E=u.declare(l=>(l.assertVersion(7),{visitor:{Program(n,s){const r=s.filename||"";if(r.includes("/veltra-router/")||r.includes("\\veltra-router\\")||r.includes("/veltra-app/")||r.includes("\\veltra-app\\")||r.includes("/node_modules/@veltra/app/")||r.includes("\\node_modules\\@veltra\\app\\"))return;let t=!1;n.get("body").forEach(o=>{o.isImportDeclaration()&&o.node.source.value==="@veltra/app"&&o.node.specifiers.forEach(a=>{if(e.isImportSpecifier(a)){const p=a.imported;e.isIdentifier(p)&&p.name==="loop"&&(t=!0)}})});const i=[];if(t||i.push(e.importSpecifier(e.identifier("loop"),e.identifier("loop"))),i.length){const o=e.importDeclaration(i,e.stringLiteral("@veltra/app"));n.unshiftContainer("body",o)}},JSXExpressionContainer(n){const s=n.get("expression");function r(i){const o=i.node;if(e.isCallExpression(o)&&e.isMemberExpression(o.callee)&&e.isIdentifier(o.callee.property)&&o.callee.property.name==="map"){const a=o.arguments[0],p=o.callee.object;if(e.isArrowFunctionExpression(a)&&a.params.length>=2){const c=a.params[1];e.isIdentifier(c)&&e.traverseFast(a.body,d=>{if(e.isIdentifier(d)&&d.name===c.name){const f=e.memberExpression(e.identifier(c.name),e.identifier("value"));Object.assign(d,f)}})}return e.callExpression(e.memberExpression(e.callExpression(e.identifier("loop"),[e.arrowFunctionExpression([],p)]),e.identifier("each")),[a])}return null}function t(i){const o=i.node;if(e.isLogicalExpression(o)){const a=i.get("right"),p=r(a);p&&a.replaceWith(p)}else if(e.isConditionalExpression(o)){const a=i.get("consequent"),p=i.get("alternate"),c=r(a),d=r(p);c&&a.replaceWith(c),d&&p.replaceWith(d)}else{const a=r(i);a&&i.replaceWith(a)}}t(s)}}})),x=u.declare(l=>(l.assertVersion(7),{visitor:{Program(n,s){const r=s.filename||"";if(r.includes("/veltra-router/")||r.includes("\\veltra-router\\")||r.includes("/veltra-app/")||r.includes("\\veltra-app\\")||r.includes("/node_modules/@veltra/app/")||r.includes("\\node_modules\\@veltra\\app\\"))return;let t=!1;if(n.get("body").forEach(i=>{i.isImportDeclaration()&&i.node.source.value==="@veltra/app"&&i.node.specifiers.forEach(o=>{if(e.isImportSpecifier(o)){const a=o.imported;e.isIdentifier(a)&&a.name==="logJsx"&&(t=!0)}})}),!t){const i=e.importDeclaration([e.importSpecifier(e.identifier("logJsx"),e.identifier("logJsx"))],e.stringLiteral("@veltra/app"));n.unshiftContainer("body",i)}},CallExpression(n){const s=n.get("callee");if(e.isMemberExpression(s.node)&&e.isIdentifier(s.node.object,{name:"console"})&&e.isIdentifier(s.node.property)){const r=n.node.arguments.map(t=>e.isJSXElement(t)||e.isJSXFragment(t)?e.callExpression(e.identifier("logJsx"),[t]):t);r.some((t,i)=>t!==n.node.arguments[i])&&(n.node.arguments=r)}}}})),h=u.declare(l=>(l.assertVersion(7),{visitor:{Program(n){let s=new Set(["Suspense"]);n.traverse({ImportDeclaration(r){r.node.source.value==="@veltra/app"&&r.node.specifiers.forEach(t=>{e.isImportSpecifier(t)&&e.isIdentifier(t.imported)&&t.imported.name==="Suspense"&&s.add(t.local.name)})}}),n.traverse({JSXElement(r){const t=r.node.openingElement;if(e.isJSXIdentifier(t.name)&&s.has(t.name.name)){const i=r.node.children;if(i.length===0||e.isJSXExpressionContainer(i[0]))return;const o=e.jSXExpressionContainer(e.jSXFragment(e.jSXOpeningFragment(),e.jSXClosingFragment(),i));r.node.children=[o]}}})}}})),S=u.declare(l=>(l.assertVersion(7),{visitor:{JSXExpressionContainer(n){const s=n.get("expression");e.isJSXEmptyExpression(s.node)||(n.node.expression=e.arrowFunctionExpression([],s.node))}}}));function b(l){return l.assertVersion(7),{presets:[[m,{runtime:"automatic",importSource:"@veltra/app"}]],plugins:[x,E,h,S]}}exports.default=b;
//# sourceMappingURL=index.js.map
