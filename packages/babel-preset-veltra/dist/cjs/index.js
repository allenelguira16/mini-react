"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var m=require("@babel/preset-react"),u=require("@babel/helper-plugin-utils"),g=require("@babel/types");function v(l){var r=Object.create(null);return l&&Object.keys(l).forEach(function(a){if(a!=="default"){var i=Object.getOwnPropertyDescriptor(l,a);Object.defineProperty(r,a,i.get?i:{enumerable:!0,get:function(){return l[a]}})}}),r.default=l,Object.freeze(r)}var e=v(g);u.declare(l=>(l.assertVersion(7),{visitor:{Program(r,a){const i=a.filename||"";if(i.includes("/veltra-router/")||i.includes("\\veltra-router\\")||i.includes("/veltra-app/")||i.includes("\\veltra-app\\")||i.includes("/node_modules/@veltra/app/")||i.includes("\\node_modules\\@veltra\\app\\"))return;let o=!1;r.get("body").forEach(n=>{n.isImportDeclaration()&&n.node.source.value==="@veltra/app"&&n.node.specifiers.forEach(s=>{if(e.isImportSpecifier(s)){const p=s.imported;e.isIdentifier(p)&&p.name==="loop"&&(o=!0)}})});const t=[];if(o||t.push(e.importSpecifier(e.identifier("loop"),e.identifier("loop"))),t.length){const n=e.importDeclaration(t,e.stringLiteral("@veltra/app"));r.unshiftContainer("body",n)}},JSXExpressionContainer(r){const a=r.get("expression");function i(t){const n=t.node;if(e.isCallExpression(n)&&e.isMemberExpression(n.callee)&&e.isIdentifier(n.callee.property)&&n.callee.property.name==="map"){const s=n.arguments[0],p=n.callee.object;if(e.isArrowFunctionExpression(s)&&s.params.length>=2){const c=s.params[1];e.isIdentifier(c)&&e.traverseFast(s.body,d=>{if(e.isIdentifier(d)&&d.name===c.name){const f=e.memberExpression(e.identifier(c.name),e.identifier("value"));Object.assign(d,f)}})}return e.callExpression(e.memberExpression(e.callExpression(e.identifier("loop"),[e.arrowFunctionExpression([],p)]),e.identifier("each")),[s])}return null}function o(t){const n=t.node;if(e.isLogicalExpression(n)){const s=t.get("right"),p=i(s);p&&s.replaceWith(p)}else if(e.isConditionalExpression(n)){const s=t.get("consequent"),p=t.get("alternate"),c=i(s),d=i(p);c&&s.replaceWith(c),d&&p.replaceWith(d)}else{const s=i(t);s&&t.replaceWith(s)}}o(a)}}}));const E=u.declare(l=>(l.assertVersion(7),{visitor:{Program(r,a){const i=a.filename||"";if(i.includes("/veltra-router/")||i.includes("\\veltra-router\\")||i.includes("/veltra-app/")||i.includes("\\veltra-app\\")||i.includes("/node_modules/@veltra/app/")||i.includes("\\node_modules\\@veltra\\app\\"))return;let o=!1;if(r.get("body").forEach(t=>{t.isImportDeclaration()&&t.node.source.value==="@veltra/app"&&t.node.specifiers.forEach(n=>{if(e.isImportSpecifier(n)){const s=n.imported;e.isIdentifier(s)&&s.name==="logJsx"&&(o=!0)}})}),!o){const t=e.importDeclaration([e.importSpecifier(e.identifier("logJsx"),e.identifier("logJsx"))],e.stringLiteral("@veltra/app"));r.unshiftContainer("body",t)}},CallExpression(r){const a=r.get("callee");if(e.isMemberExpression(a.node)&&e.isIdentifier(a.node.object,{name:"console"})&&e.isIdentifier(a.node.property)){const i=r.node.arguments.map(o=>e.isJSXElement(o)||e.isJSXFragment(o)?e.callExpression(e.identifier("logJsx"),[o]):o);i.some((o,t)=>o!==r.node.arguments[t])&&(r.node.arguments=i)}}}})),x=u.declare(l=>(l.assertVersion(7),{visitor:{Program(r){let a=new Set(["Suspense"]);r.traverse({ImportDeclaration(i){i.node.source.value==="@veltra/app"&&i.node.specifiers.forEach(o=>{e.isImportSpecifier(o)&&e.isIdentifier(o.imported)&&o.imported.name==="Suspense"&&a.add(o.local.name)})}}),r.traverse({JSXElement(i){const o=i.node.openingElement;if(e.isJSXIdentifier(o.name)&&a.has(o.name.name)){const t=i.node.children;if(t.length===0||e.isJSXExpressionContainer(t[0]))return;const n=e.jSXExpressionContainer(e.jSXFragment(e.jSXOpeningFragment(),e.jSXClosingFragment(),t));i.node.children=[n]}}})}}})),h=u.declare(l=>(l.assertVersion(7),{pre(){const r=this.file.metadata;r.importedLoops=new Set,r.localLoops=new Set},visitor:{Program(r,a){const i=a.file.metadata,o=i.importedLoops,t=i.localLoops;r.get("body").forEach(n=>{n.isImportDeclaration()&&n.node.source.value==="@veltra/app"&&n.node.specifiers.forEach(s=>{e.isImportSpecifier(s)&&e.isIdentifier(s.imported,{name:"loop"})&&o.add(s.local.name)}),n.isFunctionDeclaration()&&e.isIdentifier(n.node.id)&&t.add(n.node.id.name),n.isVariableDeclaration()&&n.node.declarations.forEach(s=>{e.isIdentifier(s.id)&&t.add(s.id.name)})})},CallExpression(r,a){const i=a.file.metadata,o=i.importedLoops,t=i.localLoops,n=r.get("callee");if(!n.isIdentifier())return;const s=n.node.name;if(o.has(s)&&!t.has(s)&&r.node.arguments.length===1){const p=r.node.arguments[0];!e.isArrowFunctionExpression(p)&&e.isExpression(p)&&(r.node.arguments[0]=e.arrowFunctionExpression([],p))}}}})),S=u.declare(l=>(l.assertVersion(7),{visitor:{JSXExpressionContainer(r){const a=r.get("expression");e.isJSXEmptyExpression(a.node)||(r.node.expression=e.arrowFunctionExpression([],a.node))}}}));function b(l){return l.assertVersion(7),{presets:[[m,{runtime:"automatic",importSource:"@veltra/app"}]],plugins:[E,h,x,S]}}exports.default=b;
//# sourceMappingURL=index.js.map
