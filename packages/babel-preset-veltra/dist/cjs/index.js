"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var m=require("@babel/preset-react"),u=require("@babel/helper-plugin-utils"),g=require("@babel/types");function v(l){var r=Object.create(null);return l&&Object.keys(l).forEach(function(s){if(s!=="default"){var i=Object.getOwnPropertyDescriptor(l,s);Object.defineProperty(r,s,i.get?i:{enumerable:!0,get:function(){return l[s]}})}}),r.default=l,Object.freeze(r)}var e=v(g);const E=u.declare(l=>(l.assertVersion(7),{visitor:{Program(r,s){const i=s.filename||"";if(i.includes("/veltra-app/")||i.includes("\\veltra-app\\")||i.includes("/node_modules/@veltra/app/")||i.includes("\\node_modules\\@veltra\\app\\"))return;let t=!1;r.get("body").forEach(o=>{o.isImportDeclaration()&&o.node.source.value==="@veltra/app"&&o.node.specifiers.forEach(a=>{if(e.isImportSpecifier(a)){const p=a.imported;e.isIdentifier(p)&&p.name==="loop"&&(t=!0)}})});const n=[];if(t||n.push(e.importSpecifier(e.identifier("loop"),e.identifier("loop"))),n.length){const o=e.importDeclaration(n,e.stringLiteral("@veltra/app"));r.unshiftContainer("body",o)}},JSXExpressionContainer(r){const s=r.get("expression");function i(n){const o=n.node;if(e.isCallExpression(o)&&e.isMemberExpression(o.callee)&&e.isIdentifier(o.callee.property)&&o.callee.property.name==="map"){const a=o.arguments[0],p=o.callee.object;if(e.isArrowFunctionExpression(a)&&a.params.length>=2){const c=a.params[1];e.isIdentifier(c)&&e.traverseFast(a.body,d=>{if(e.isIdentifier(d)&&d.name===c.name){const f=e.memberExpression(e.identifier(c.name),e.identifier("value"));Object.assign(d,f)}})}return e.callExpression(e.memberExpression(e.callExpression(e.identifier("loop"),[e.arrowFunctionExpression([],p)]),e.identifier("each")),[a])}return null}function t(n){const o=n.node;if(e.isLogicalExpression(o)){const a=n.get("right"),p=i(a);p&&a.replaceWith(p)}else if(e.isConditionalExpression(o)){const a=n.get("consequent"),p=n.get("alternate"),c=i(a),d=i(p);c&&a.replaceWith(c),d&&p.replaceWith(d)}else{const a=i(n);a&&n.replaceWith(a)}}t(s)}}})),x=u.declare(l=>(l.assertVersion(7),{visitor:{Program(r,s){const i=s.filename||"";if(i.includes("/veltra-app/")||i.includes("\\veltra-app\\")||i.includes("/node_modules/@veltra/app/")||i.includes("\\node_modules\\@veltra\\app\\"))return;let t=!1;if(r.get("body").forEach(n=>{n.isImportDeclaration()&&n.node.source.value==="@veltra/app"&&n.node.specifiers.forEach(o=>{if(e.isImportSpecifier(o)){const a=o.imported;e.isIdentifier(a)&&a.name==="logJsx"&&(t=!0)}})}),!t){const n=e.importDeclaration([e.importSpecifier(e.identifier("logJsx"),e.identifier("logJsx"))],e.stringLiteral("@veltra/app"));r.unshiftContainer("body",n)}},CallExpression(r){const s=r.get("callee");if(e.isMemberExpression(s.node)&&e.isIdentifier(s.node.object,{name:"console"})&&e.isIdentifier(s.node.property)){const i=r.node.arguments.map(t=>e.isJSXElement(t)||e.isJSXFragment(t)?e.callExpression(e.identifier("logJsx"),[t]):t);i.some((t,n)=>t!==r.node.arguments[n])&&(r.node.arguments=i)}}}})),h=u.declare(l=>(l.assertVersion(7),{visitor:{Program(r){let s=new Set(["Suspense"]);r.traverse({ImportDeclaration(i){i.node.source.value==="@veltra/app"&&i.node.specifiers.forEach(t=>{e.isImportSpecifier(t)&&e.isIdentifier(t.imported)&&t.imported.name==="Suspense"&&s.add(t.local.name)})}}),r.traverse({JSXElement(i){const t=i.node.openingElement;if(e.isJSXIdentifier(t.name)&&s.has(t.name.name)){const n=i.node.children;if(n.length===0||e.isJSXExpressionContainer(n[0]))return;const o=e.jSXExpressionContainer(e.jSXFragment(e.jSXOpeningFragment(),e.jSXClosingFragment(),n));i.node.children=[o]}}})}}})),S=u.declare(l=>(l.assertVersion(7),{visitor:{JSXExpressionContainer(r){const s=r.get("expression");e.isJSXEmptyExpression(s.node)||(r.node.expression=e.arrowFunctionExpression([],s.node))}}}));function b(l){return l.assertVersion(7),{presets:[[m,{runtime:"automatic",importSource:"@veltra/app"}]],plugins:[x,E,h,S]}}exports.default=b;
//# sourceMappingURL=index.js.map
