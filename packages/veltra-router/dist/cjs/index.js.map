{"version":3,"file":"index.js","sources":["../../../veltra-app/src/const/index.ts","../../../veltra-app/src/render/render-children/patch.ts","../../../veltra-app/src/render/mount-component/resolve-component-props.ts","../../../veltra-app/src/render/mount-component/mount-component.ts","../../../veltra-app/src/render/suspense.ts","../../../veltra-app/src/render/render-children/render-children.ts","../../../veltra-app/src/render/fragment.ts","../../../veltra-app/src/reactivity/effect.ts","../../../veltra-app/src/render/event-registry.ts","../../../veltra-app/src/render/apply-props.ts","../../../veltra-app/src/render/h.ts","../../../veltra-app/src/render/ssr.ts","../../../veltra-app/src/util/to-array.ts","../../../veltra-app/src/jsx-runtime.ts","../../src/index.tsx"],"sourcesContent":["export * from \"./element-tags\";\nexport * from \"./unit-less-props\";\nexport const IS_SSR = typeof document === \"undefined\";\n","import { runComponentCleanup, runLifecycle } from \"~/life-cycle\";\nimport { isNil } from \"~/util\";\n\n/**\n * patch the old nodes with the new nodes\n *\n * @param parentNode - The parent node.\n * @param oldNodes - The old nodes.\n * @param newNodes - The new nodes.\n */\nexport function patch(\n  parentNode: Node,\n  oldNodes: (ChildNode | undefined)[],\n  newNodes: (ChildNode | undefined)[],\n  insertBeforeNode?: Node,\n) {\n  const maxLength = Math.max(oldNodes.length, newNodes.length);\n\n  for (let i = 0; i < maxLength; i++) {\n    const oldNode = oldNodes[i];\n    const newNode = newNodes[i];\n\n    // Add new node\n    if (isNil(oldNode) && !isNil(newNode)) {\n      if (insertBeforeNode) {\n        parentNode.insertBefore(newNode, insertBeforeNode);\n      } else {\n        parentNode.appendChild(newNode);\n      }\n      runLifecycle(newNode);\n      oldNodes[i] = newNode;\n      continue;\n    }\n\n    // Remove old node\n    if (!isNil(oldNode) && isNil(newNode)) {\n      runComponentCleanup(oldNode);\n      parentNode.removeChild(oldNode);\n      oldNodes[i] = undefined;\n      continue;\n    }\n\n    // If both empty, continue to next iteration\n    if (isNil(oldNode) && isNil(newNode)) {\n      continue;\n    }\n\n    if (oldNode && newNode) {\n      runComponentCleanup(oldNode);\n      runLifecycle(newNode);\n      oldNode.replaceWith(newNode);\n      oldNodes[i] = newNode;\n      continue;\n    }\n\n    console.warn(`[veltra]: warning - unknown dom detected: `, {\n      old: oldNode,\n      new: newNode,\n    });\n  }\n\n  return [...oldNodes];\n}\n","import { Suspense } from \"../suspense\";\n\nconst IGNORE_COMPONENT = [Suspense] as Array<(...args: any[]) => any>;\n\n/**\n * resolve the component props\n *\n * @param type - The type of the component.\n * @param props - The properties of the component.\n */\nexport function resolveComponentProps(type: (...args: any[]) => any, props: Record<string, any>) {\n  if (IGNORE_COMPONENT.includes(type)) return;\n\n  for (const key in props) {\n    props[key] = props[key] instanceof Function ? props[key]() : props[key];\n  }\n}\n","import { componentLifecycleContexts, createLifeCycleContext } from \"~/life-cycle\";\nimport { untrack } from \"~/reactivity\";\nimport { toArray } from \"~/util\";\n\nimport { resolveComponentProps } from \"./resolve-component-props\";\n\nexport const componentRootNodes = new Set<Node>();\n\n/**\n * mount a component\n *\n * @param type - The type of the component.\n * @param props - The properties of the component.\n * @param children - The children of the component.\n */\nexport function mountComponent(\n  type: (props: Record<string, any>) => any,\n  { key: _key, ...props }: { key?: () => string } & Record<string, any>,\n  children: JSX.Element[],\n) {\n  const key = _key?.();\n\n  resolveComponentProps(type, props);\n\n  const context = createLifeCycleContext(type, key);\n\n  const targetNode = document.createTextNode(\"\");\n  componentRootNodes.add(targetNode);\n\n  const node = toArray(untrack(() => type({ ...props, children })));\n\n  componentLifecycleContexts.set(targetNode, {\n    firstRender: true,\n    context,\n  });\n  // runLifecycle(context, targetNode);\n\n  node.unshift(targetNode);\n  return node;\n}\n\nexport function runLifecycle(targetNode: Node) {\n  const context = componentLifecycleContexts.get(targetNode);\n  if (!context) return;\n\n  console.log(context);\n  // runLifecycle(context, targetNode);\n}\n","import { onMount } from \"~/life-cycle\";\n\nimport { componentRootNodes } from \"./mount-component\";\nimport { renderChildren } from \"./render-children\";\n\nconst suspenseHandlerList: ((promise: Promise<void>) => void)[] = [];\n\nexport function Suspense(props: { fallback?: JSX.Element; children: JSX.Element }) {\n  const rootNode = document.createTextNode(\"\");\n  componentRootNodes.add(rootNode);\n\n  const {\n    fallback,\n    children: [children],\n  } = props as unknown as {\n    fallback?: () => JSX.Element;\n    children: [() => JSX.Element[]];\n  };\n\n  onMount(() => {\n    const parentNode = rootNode.parentNode!;\n\n    if (!parentNode) return;\n\n    const cleanups: (() => void)[] = [];\n\n    const withSuspenseRender = (items: JSX.Element) => {\n      suspenseHandlerList.push(handler);\n      cleanups.push(renderChildren(parentNode, [items]));\n      suspenseHandlerList.pop();\n    };\n\n    const handler = (promise: Promise<void>) => {\n      queueMicrotask(() => {\n        cleanups.forEach((cleanup) => cleanup());\n\n        if (fallback) withSuspenseRender(fallback);\n      });\n\n      promise.then(() => {\n        cleanups.forEach((cleanup) => cleanup());\n\n        withSuspenseRender(children);\n      });\n    };\n\n    withSuspenseRender(children);\n  });\n\n  return rootNode;\n}\n\nexport function getCurrentSuspenseHandler() {\n  return suspenseHandlerList[suspenseHandlerList.length - 1];\n}\n","import { effect } from \"~/reactivity\";\nimport { getNode, toArray } from \"~/util\";\n\nimport { getCurrentSuspenseHandler } from \"../suspense\";\nimport { patch } from \"./patch\";\n\n/**\n * render the children\n *\n * @param parentNode - The parent node.\n * @param children - The children to render.\n */\nexport function renderChildren(parentNode: Node, children: JSX.Element[]) {\n  const cleanups: Record<\"disposer\" | \"oldNodes\", (() => void)[]> = {\n    disposer: [],\n    oldNodes: [],\n  };\n\n  for (const child of children) {\n    const anchor: Node = document.createTextNode(\"\");\n    parentNode.appendChild(anchor);\n\n    let oldNodes: (ChildNode | undefined)[] = [];\n    const handler = getCurrentSuspenseHandler();\n\n    const disposer = effect(() => {\n      let result: JSX.Element;\n      let newNodes: (ChildNode | undefined)[] = [];\n\n      try {\n        result = typeof child === \"function\" ? child() : child;\n        newNodes = toArray(getNode(result)) as ChildNode[];\n      } catch (error) {\n        if (error instanceof Promise) {\n          queueMicrotask(() => {\n            disposer();\n          });\n          if (handler) {\n            handler(error);\n          }\n          return;\n        } else {\n          throw error;\n        }\n      }\n\n      oldNodes = patch(parentNode, oldNodes, newNodes, anchor);\n\n      cleanups.oldNodes.push(() => {\n        patch(parentNode, oldNodes, [], anchor);\n      });\n    });\n\n    cleanups.disposer.push(() => {\n      disposer();\n    });\n  }\n\n  return () => {\n    cleanups.disposer.forEach((cleanup) => cleanup());\n    cleanups.oldNodes.forEach((cleanup) => cleanup());\n  };\n}\n","/**\n * Create a fragment\n *\n * @param children - The children of the fragment.\n * @returns The fragment.\n */\nexport function Fragment({ children }: { children: JSX.Element[] }) {\n  return children;\n}\n","import { effectContext } from \"~/context\";\n\n/**\n * Effect function type with dependency tracking\n *\n * @param deps - The dependencies of the effect.\n */\nexport type EffectFn = (() => void) & { deps?: Set<EffectFn>[] };\n\n/**\n * Currently active effect\n */\nexport let activeEffect: EffectFn | null = null;\n\nexport function setActiveEffect(newActiveEffect: EffectFn | null) {\n  activeEffect = newActiveEffect;\n}\n\nlet lastDisposer: (() => void) | null = null;\n\n/**\n * Create an effect\n *\n * @param fn - The effect function.\n * @returns The cleanup function.\n */\nexport function effect(fn: () => void): () => void {\n  const wrappedEffect: EffectFn = () => {\n    removeEffect(wrappedEffect);\n    const previousEffect = activeEffect;\n    activeEffect = wrappedEffect;\n\n    if (effectContext) effectContext.push(wrappedEffect);\n\n    try {\n      fn();\n    } finally {\n      activeEffect = previousEffect;\n    }\n  };\n\n  wrappedEffect.deps = [];\n  wrappedEffect();\n\n  const disposer = () => removeEffect(wrappedEffect);\n  lastDisposer = disposer; // âœ… track disposer for stopEffect\n\n  return disposer;\n}\n\nexport function stopEffect() {\n  queueMicrotask(() => {\n    if (lastDisposer) {\n      lastDisposer();\n      lastDisposer = null;\n    }\n  });\n}\n\n/**\n * Remove an effect\n *\n * @param effect - The effect to remove.\n */\nexport function removeEffect(effect: EffectFn) {\n  if (effect.deps) {\n    for (const depSet of effect.deps) {\n      depSet.delete(effect); // Remove this effect from all dependency sets\n    }\n    effect.deps.length = 0; // Reset dependency list\n  }\n}\n","type EventHandlerMap = Map<string, EventListener>;\n\nconst eventRegistry = new WeakMap<HTMLElement, EventHandlerMap>();\n\n/**\n * Add an event listener\n *\n * @param element - The element to add the event listener to.\n * @param type - The type of event to listen for.\n * @param listener - The event listener function.\n */\nexport function addEventListener(element: HTMLElement, type: string, listener: EventListener) {\n  let handlers = eventRegistry.get(element);\n\n  if (!handlers) {\n    handlers = new Map();\n    eventRegistry.set(element, handlers);\n  }\n\n  // Remove old listener if any\n  if (handlers.has(type)) {\n    element.removeEventListener(type, handlers.get(type)!);\n  }\n\n  element.addEventListener(type, listener);\n  handlers.set(type, listener);\n}\n\n/**\n * Remove an event listener\n *\n * @param element - The element to remove the event listener from.\n * @param type - The type of event to remove.\n */\nexport function removeEventListener(element: HTMLElement, type: string) {\n  const handlers = eventRegistry.get(element);\n  if (!handlers) return;\n\n  const listener = handlers.get(type);\n  if (listener) {\n    element.removeEventListener(type, listener);\n    handlers.delete(type); // Remove it from the map\n  }\n\n  // Clean up if no handlers left\n  if (handlers.size === 0) {\n    eventRegistry.delete(element);\n  }\n}\n\n/**\n * Copy event listeners from one element to another\n *\n * @param from - The element to copy the event listeners from.\n * @param to - The element to copy the event listeners to.\n */\nexport function copyEventListeners(from: HTMLElement, to: HTMLElement) {\n  const handlers = eventRegistry.get(from);\n  if (!handlers) return;\n\n  handlers.forEach((listener, type) => {\n    removeEventListener(to, type);\n    addEventListener(to, type, listener);\n  });\n}\n\n/**\n * Remove all event listeners from an element\n *\n * @param element - The element to remove the event listeners from.\n */\nexport function removeEventListeners(element: HTMLElement) {\n  const handlers = eventRegistry.get(element);\n  if (!handlers) return;\n\n  handlers.forEach((listener, type) => {\n    element.removeEventListener(type, listener);\n  });\n\n  eventRegistry.delete(element);\n}\n","import { UNIT_LESS_PROPS } from \"~/const\";\n\nimport { effect } from \"../reactivity\";\nimport { addEventListener, removeEventListener } from \"./event-registry\";\n\n/**\n * apply the properties to the element\n *\n * @param element - The element to apply the properties to.\n * @param props - The properties to apply.\n */\nexport function applyProps(element: HTMLElement, props: Record<string, any>) {\n  for (const key in props) {\n    if (key.startsWith(\"on\") && typeof props[key] === \"function\") {\n      const type = key.slice(2).toLowerCase();\n      let cleanup: () => void;\n\n      effect(() => {\n        // Remove the previous listener if there was one\n        if (cleanup) cleanup();\n\n        const fn = props[key]();\n        if (typeof fn === \"function\") {\n          addEventListener(element, type, fn);\n          // Setup cleanup for next effect run\n          cleanup = () => removeEventListener(element, type);\n        }\n      });\n    } else {\n      const run = () => {\n        const value = typeof props[key] === \"function\" ? props[key]() : props[key];\n\n        if (key === \"ref\" && typeof value === \"function\") {\n          value(element);\n        } else if (key === \"style\") {\n          applyStyle(element, value);\n        } else if (key === \"disabled\") {\n          element.toggleAttribute(key, value);\n        } else {\n          element.setAttribute(key, value);\n        }\n      };\n      effect(() => {\n        try {\n          run();\n        } catch (error) {\n          if (error instanceof Promise) {\n            error.then(run);\n          } else {\n            throw error;\n          }\n        }\n      });\n    }\n  }\n}\n\n/**\n * apply the style to the element\n *\n * @param element - The element to apply the style to.\n * @param style - The style to apply.\n */\nfunction applyStyle(element: HTMLElement, style: Record<string, any>) {\n  if (!(element instanceof HTMLElement)) return;\n\n  for (const [key, value] of Object.entries(style)) {\n    const cssKey = key as keyof CSSStyleDeclaration;\n    if (cssKey === \"length\" || cssKey === \"parentRule\") continue;\n\n    const isNumber = typeof value === \"number\";\n    const needsUnit = isNumber && !isUnitLessCSSProperty(key);\n    const finalValue = needsUnit ? `${value}px` : String(value);\n\n    element.style.setProperty(String(cssKey), finalValue);\n  }\n}\n\n/**\n * check if a property is a unit less CSS property\n *\n * @param prop - The property to check.\n * @returns True if the property is a unit less CSS property.\n */\nfunction isUnitLessCSSProperty(prop: string): boolean {\n  const unitLessProps = new Set(UNIT_LESS_PROPS);\n\n  return unitLessProps.has(prop);\n}\n","import { MATH_ML_TAGS, SVG_TAGS } from \"~/const\";\nimport { Fragment } from \"~/jsx-runtime\";\n\nimport { applyProps } from \"./apply-props\";\nimport { mountComponent } from \"./mount-component\";\nimport { renderChildren } from \"./render-children\";\n\n/**\n * create a JSX element\n *\n * @param type - The type of the element.\n * @param props - The properties of the element.\n * @param children - The children of the element.\n * @returns The JSX element.\n */\nexport function h(\n  type: string | ((props: Record<string, any>) => any),\n  props: Record<string, any>,\n  children: JSX.Element[],\n  key?: () => string,\n) {\n  if (type === Fragment) {\n    return children;\n  }\n\n  if (typeof type === \"function\") {\n    return mountComponent(type, { key, ...props }, children);\n  }\n\n  const element = createElement(type, props.xmlns);\n\n  applyProps(element, props);\n  renderChildren(element, children);\n\n  return element;\n}\n\nfunction createElement(tag: string, namespace?: string) {\n  if ((SVG_TAGS.has(tag) || MATH_ML_TAGS.has(tag)) && namespace) {\n    return document.createElementNS(namespace, tag) as HTMLElement;\n  }\n\n  return document.createElement(tag);\n}\n","/**\n * Create a JSX element for SSR\n *\n * @param type - The type of the element.\n * @param props - The properties of the element.\n * @param children - The children of the element.\n * @returns The JSX element for SSR.\n */\nexport function hSSR(\n  type: string | ((props: Record<string, any>) => any),\n  props: Record<string, any>,\n  children: JSX.Element[],\n) {\n  if (typeof type === \"function\") {\n    return type({ ...props, children });\n  }\n\n  return `<${type} ${handlePropsSSR(props)}>${handleChildrenSSR(children)}</${type}>`;\n}\n\n/**\n * Handle the properties of the element for SSR\n *\n * @param props - The properties of the element.\n * @returns The transformed properties.\n */\nfunction handlePropsSSR(props: Record<string, any>) {\n  const transformedProps: string[] = [];\n\n  for (const key in props) {\n    if (key.startsWith(\"on\") && typeof props[key] === \"function\") {\n      continue;\n    }\n\n    const value = typeof props[key] === \"function\" ? props[key]() : props[key];\n\n    if (key === \"ref\" && typeof value === \"function\") {\n      // value($element);\n    } else if (key === \"style\") {\n      // applyStyle($element, value);\n    } else if (key === \"disabled\" && value) {\n      transformedProps.push(\"disabled\");\n    } else {\n      transformedProps.push(`${key}=\"${value}\"`);\n    }\n  }\n\n  return transformedProps.join(\" \");\n}\n\n/**\n * Handle the children of the element for SSR\n *\n * @param children - The children of the element.\n * @returns The transformed children.\n */\nfunction handleChildrenSSR(children: JSX.Element[]) {\n  const transformedChildren: string[] = [];\n\n  for (const child of children) {\n    if (typeof child === \"function\") {\n      transformedChildren.push(String(child()));\n    } else if (Array.isArray(child)) {\n      // RECURSIVELY flatten nested arrays\n      child.forEach((nested) => transformedChildren.push(handleChildrenSSR([nested])));\n    } else {\n      transformedChildren.push(child as string);\n    }\n  }\n\n  return transformedChildren.join(\"\");\n}\n","/**\n * convert an item to an array\n *\n * @param item - The item to convert to an array.\n * @returns The item as an array.\n */\nexport const toArray = <T>(item: T) => {\n  return (Array.isArray(item) ? item : [item]).flat(Infinity) as T[];\n};\n","import { IS_SSR } from \"./const\";\nimport { Fragment, h, hSSR } from \"./render\";\nimport { toArray } from \"./util\";\n\n/**\n * jsx runtime\n *\n * @param type - The type of the element.\n * @param props - The properties of the element.\n * @param children - The children of the element.\n * @returns The JSX element.\n */\nconst jsx = (\n  type: string | ((props: any) => any),\n  { children = [], ...props }: Record<string, any>,\n  key?: () => string,\n) => {\n  if (IS_SSR) {\n    return hSSR(type, props, toArray(children));\n  }\n\n  return h(type, props, toArray(children), key);\n};\n\nexport { Fragment, jsx, jsx as jsxs };\n","import { effect, state } from \"@veltra/app\";\n\nexport type Route = {\n  path: string;\n  component: () => JSX.Element;\n  children?: Route[];\n  guard?: () => boolean;\n  lazy?: () => Promise<{ default: () => JSX.Element }>;\n};\n\nexport type Location = {\n  pathname: string;\n  search: string;\n};\n\nexport const location = state<Location>({\n  pathname: window.location.pathname,\n  search: window.location.search,\n});\n\nwindow.addEventListener(\"popstate\", () => {\n  location.value = {\n    ...location.value,\n    pathname: window.location.pathname,\n  };\n});\n\n/**\n * navigate to a path\n *\n * @param path - The path to navigate to.\n */\nexport function navigate(path: string) {\n  history.pushState(null, \"\", path);\n  location.value = {\n    ...location.value,\n    pathname: path,\n  };\n}\n\nfunction matchRoute(path: string, routes: Route[]): Route | undefined {\n  for (const route of routes) {\n    if (route.path === path) return route;\n    if (route.children) {\n      const child = matchRoute(path, route.children);\n      if (child) return child;\n    }\n  }\n  return undefined;\n}\n\n/**\n * create a router\n *\n * @param props - The properties of the router.\n * @returns The router.\n */\nexport function Router(props: { routes: Route[] }) {\n  const current = state<() => JSX.Element>(() => <></>);\n\n  effect(() => {\n    const matched = matchRoute(location.value.pathname, props.routes);\n    if (matched) {\n      if (matched.guard && !matched.guard()) {\n        current.value = () => <div>Access Denied</div>;\n        return;\n      }\n      if (matched.lazy) {\n        matched.lazy().then((mod) => {\n          current.value = mod.default;\n        });\n        return;\n      }\n      current.value = matched.component;\n    } else {\n      current.value = () => <div>404 Not Found</div>;\n    }\n  });\n\n  return () => {\n    return <>{current.value()}</>;\n  };\n}\n"],"names":["IS_SSR","patch","parentNode","oldNodes","newNodes","insertBeforeNode","maxLength","oldNode","newNode","isNil","runLifecycle","runComponentCleanup","IGNORE_COMPONENT","Suspense","resolveComponentProps","type","props","key","componentRootNodes","mountComponent","_key","children","context","createLifeCycleContext","targetNode","node","toArray","untrack","componentLifecycleContexts","suspenseHandlerList","rootNode","fallback","onMount","cleanups","withSuspenseRender","items","handler","renderChildren","promise","cleanup","getCurrentSuspenseHandler","child","anchor","disposer","effect","result","getNode","error","Fragment","fn","wrappedEffect","removeEffect","effectContext","depSet","eventRegistry","addEventListener","element","listener","handlers","removeEventListener","applyProps","run","value","applyStyle","style","cssKey","finalValue","isUnitLessCSSProperty","prop","UNIT_LESS_PROPS","h","createElement","tag","namespace","SVG_TAGS","MATH_ML_TAGS","hSSR","handlePropsSSR","handleChildrenSSR","transformedProps","transformedChildren","nested","item","jsx","location","state","navigate","path","matchRoute","routes","route","Router","current","matched","mod"],"mappings":"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"}