{"version":3,"file":"register-lifecycle-8cNbrrMx.js","sources":["../../../src/context/destroy-context.ts","../../../src/context/mount-context.ts","../../../src/context/effect-context.ts","../../../src/life-cycle/init-lifecycle.ts","../../../src/reactivity/effect.ts","../../../src/reactivity/track.ts","../../../src/reactivity/state.ts","../../../src/reactivity/untrack.ts","../../../src/life-cycle/component-cleanup.ts","../../../src/render/render-children/suspense-effect.ts","../../../src/render/render-children/patch.ts","../../../src/render/render-children/render-children.ts","../../../src/const/element-tags.ts","../../../src/const/unit-less-props.ts","../../../src/const/index.ts","../../../src/render/apply-props.ts","../../../src/render/suspense.ts","../../../src/render/mount-component/resolve-component-props.ts","../../../src/render/mount-component/mount-component.ts","../../../src/jsx-runtime.ts","../../../src/render/h.ts","../../../src/render/ssr.ts","../../../src/render/fragment.ts","../../../src/util/is-node-nil.ts","../../../src/util/get-node.ts","../../../src/util/to-array.ts","../../../src/util/on-node-reattached.ts","../../../src/life-cycle/register-lifecycle.ts"],"sourcesContent":["import { DestroyFn } from \"~/life-cycle\";\n\nexport let destroyContext: DestroyFn[] | null = null;\n\nexport function setDestroyContext(stack: (() => void)[] | null) {\n  destroyContext = stack;\n}\n","import { MountFn } from \"~/life-cycle\";\n\nexport let mountContext: MountFn[] | null = null;\n\nexport function setMountContext(stack: (() => void)[] | null) {\n  mountContext = stack;\n}\n","import { EffectFn } from \"~/reactivity\";\n\nexport let effectContext: EffectFn[] | null = null;\n\nexport function setEffectContext(newEffectContext: EffectFn[] | null) {\n  effectContext = newEffectContext;\n}\n","import { setDestroyContext, setEffectContext, setMountContext } from \"~/context\";\nimport { LifecycleContext } from \"./register-lifecycle\";\n\nexport function initializeLifecycleContext(context: LifecycleContext) {\n  setMountContext(context.mount);\n  setEffectContext(context.effect);\n  setDestroyContext(context.destroy);\n}\n","import { effectContext } from \"~/context\";\n\n// Effect function type with dependency tracking\nexport type EffectFn = (() => void) & { deps?: Set<EffectFn>[] };\n\n// Currently active effect (global context for dependency collection)\nexport let activeEffect: EffectFn | null = null;\n\nexport function setActiveEffect(newActiveEffect: EffectFn | null) {\n  activeEffect = newActiveEffect;\n}\n\nexport function effect(fn: () => void): () => void {\n  const wrappedEffect: EffectFn = () => {\n    removeEffect(wrappedEffect);\n\n    const previousEffect = activeEffect; // save previous activeEffect\n    activeEffect = wrappedEffect;\n\n    if (effectContext) {\n      effectContext.push(wrappedEffect); // keep your effectContext intact\n    }\n\n    try {\n      fn();\n    } finally {\n      activeEffect = previousEffect; // restore outer activeEffect\n    }\n  };\n\n  wrappedEffect.deps = [];\n  wrappedEffect();\n\n  return () => removeEffect(wrappedEffect);\n}\n\nexport function removeEffect(effect: EffectFn) {\n  if (effect.deps) {\n    for (const depSet of effect.deps) {\n      depSet.delete(effect); // Remove this effect from all dependency sets\n    }\n    effect.deps.length = 0; // Reset dependency list\n  }\n}\n","import { activeEffect, EffectFn } from \"./effect\";\n\n// WeakMap to track which targets/keys map to which effects\nconst targetToPropertyEffectsMap: WeakMap<\n  object,\n  Map<PropertyKey, Set<EffectFn>>\n> = new WeakMap();\n\nexport function track(target: object, key: PropertyKey) {\n  if (!activeEffect) return; // No effect is currently running\n\n  let propertyEffectsMap = targetToPropertyEffectsMap.get(target);\n  if (!propertyEffectsMap) {\n    propertyEffectsMap = new Map();\n    targetToPropertyEffectsMap.set(target, propertyEffectsMap);\n  }\n\n  let effects = propertyEffectsMap.get(key);\n  if (!effects) {\n    effects = new Set();\n    propertyEffectsMap.set(key, effects);\n  }\n\n  if (!effects.has(activeEffect)) {\n    effects.add(activeEffect);\n    // Record this dependency set for cleanup later\n    if (activeEffect.deps) {\n      activeEffect.deps.push(effects);\n    } else {\n      activeEffect.deps = [effects];\n    }\n  }\n}\n\nexport function trigger(target: object, key: PropertyKey) {\n  const propertyEffectsMap = targetToPropertyEffectsMap.get(target);\n  if (!propertyEffectsMap) return;\n\n  const effects = propertyEffectsMap.get(key);\n  if (!effects) return;\n\n  // Clone the effects set to avoid infinite loops if the effect triggers itself\n  const effectsToRun = new Set(effects);\n  for (const effect of effectsToRun) {\n    effect();\n  }\n}\n","import { track, trigger } from \"./track\";\n\nexport type State<T> = {\n  value: T;\n};\n\nexport function state<T>(initialValue: T): State<T>;\nexport function state<T = undefined>(): State<T | undefined>;\nexport function state<T>(initialValue?: T): State<T | undefined> {\n  const state = { value: initialValue };\n\n  return new Proxy(state, {\n    get(target, key, receiver) {\n      track(target, key);\n      return Reflect.get(target, key, receiver);\n    },\n    set(target, key, newValue, receiver) {\n      const oldValue = target[key as keyof typeof target];\n      const result = Reflect.set(target, key, newValue, receiver);\n\n      if (oldValue !== newValue) {\n        trigger(target, key);\n      }\n\n      return result;\n    },\n  });\n}\n","import { activeEffect, setActiveEffect } from \"./effect\";\n\nexport function untrack<T>(fn: () => T): T {\n  const prevEffect = activeEffect;\n  setActiveEffect(null); // disable tracking\n\n  try {\n    return fn();\n  } finally {\n    setActiveEffect(prevEffect); // restore previous tracking context\n  }\n}\n","const cleanupMap = new Map<Node, (() => void)[]>();\n\nexport function registerComponentCleanup(node: Node, cleanups: (() => void)[]) {\n  cleanupMap.set(node, cleanups);\n}\n\nexport function runComponentCleanup($node: Node) {\n  const cleanups = cleanupMap.get($node) || [];\n  for (const cleanup of cleanups) {\n    cleanup();\n  }\n}\n","import { effect } from \"~/reactivity\";\n\nexport function suspenseReactor(fn: () => void) {\n  let cleanup: (() => void) | null = null;\n\n  const run = () => {\n    if (cleanup) cleanup();\n\n    cleanup = effect(() => {\n      try {\n        fn();\n      } catch (e) {\n        if (e instanceof Promise) {\n          e.then(run).catch(console.error);\n        } else {\n          console.error(e);\n        }\n      }\n    });\n  };\n\n  run();\n}\n","import { isNil } from \"~/util\";\nimport { runComponentCleanup } from \"~/life-cycle\";\n\n/**\n * patch the old nodes with the new nodes\n *\n * @param $parent - The parent node.\n * @param $oldNodes - The old nodes.\n * @param $newNodes - The new nodes.\n * @param isFirstRender - Whether it is the first render.\n */\nexport function patch(\n  $parent: Node,\n  $oldNodes: Node[],\n  $newNodes: (Node | undefined)[],\n  isFirstRender: boolean,\n) {\n  const maxLength = Math.max($oldNodes.length, $newNodes.length);\n\n  for (let i = 0; i < maxLength; i++) {\n    const $oldNode = $oldNodes[i];\n    const $newNode = $newNodes[i];\n\n    if (isFirstRender) {\n      if (isNil($newNode)) continue;\n\n      $parent.appendChild($newNode);\n      $oldNodes[i] = $newNode;\n\n      continue;\n    }\n\n    // Add new node\n    if (isNil($oldNode) && !isNil($newNode)) {\n      $parent.appendChild($newNode);\n      $oldNodes[i] = $newNode;\n      continue;\n    }\n\n    // Remove old node\n    if (!isNil($oldNode) && isNil($newNode)) {\n      runComponentCleanup($oldNode);\n      $parent.removeChild($oldNodes[i]);\n      $oldNodes.splice(i, 1);\n      i--;\n      continue;\n    }\n\n    // If both empty, continue to next iteration\n    if (isNil($oldNode) && isNil($newNode)) {\n      continue;\n    }\n\n    if ($oldNode && $newNode) {\n      // Replace node with node\n      if (!$oldNode.isSameNode($newNode)) {\n        runComponentCleanup($oldNode);\n        ($oldNode as ChildNode).replaceWith($newNode);\n        $oldNodes[i] = $newNode;\n      }\n      continue;\n    }\n\n    console.log(`[veltra]: warning - unknown dom detected: `, {\n      old: $oldNode,\n      new: $newNode,\n    });\n  }\n\n  return [...$oldNodes];\n}\n","import { getNode, toArray } from \"~/util\";\nimport { suspenseReactor } from \"./suspense-effect\";\nimport { patch } from \"./patch\";\n\n/**\n * render the children\n *\n * @param $parent - The parent node.\n * @param children - The children to render.\n * @param index - The index to insert the children at.\n */\nexport function renderChildren($parent: Node, children: JSX.Element[], index?: number) {\n  let insertBeforeNode: ChildNode | null = null;\n\n  if (index !== undefined) {\n    insertBeforeNode = $parent.childNodes[index] as ChildNode;\n  }\n\n  for (const $child of children) {\n    if (typeof $child === \"function\") {\n      let $oldNodes: Node[] = [];\n      let isFirstRender = true;\n\n      suspenseReactor(() => {\n        const $newNodes = toArray($child()).map(getNode).flat();\n        $oldNodes = patch($parent, $oldNodes, $newNodes, isFirstRender);\n        isFirstRender = false;\n      });\n    } else {\n      const $node = getNode($child);\n      if (!Array.isArray($node) && $node) {\n        if (insertBeforeNode) {\n          $parent.insertBefore($node, insertBeforeNode);\n        } else {\n          $parent.appendChild($node);\n        }\n      }\n    }\n  }\n}\n","export const SVG_TAGS = new Set([\n  \"a\",\n  \"animate\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"defs\",\n  \"desc\",\n  \"discard\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"foreignObject\",\n  \"g\",\n  \"hatch\",\n  \"hatchpath\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"mesh\",\n  \"meshgradient\",\n  \"meshpatch\",\n  \"meshrow\",\n  \"metadata\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"script\",\n  \"set\",\n  \"solidcolor\",\n  \"stop\",\n  \"style\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"title\",\n  \"tref\",\n  \"tspan\",\n  \"unknown\",\n  \"use\",\n  \"view\",\n]);\n\nexport const MATH_ML_TAGS = new Set([\n  \"math\",\n  \"maction\",\n  \"maligngroup\",\n  \"malignmark\",\n  \"menclose\",\n  \"merror\",\n  \"mfenced\",\n  \"mfrac\",\n  \"mglyph\",\n  \"mi\",\n  \"mlabeledtr\",\n  \"mmultiscripts\",\n  \"mn\",\n  \"mo\",\n  \"mover\",\n  \"mpadded\",\n  \"mphantom\",\n  \"mroot\",\n  \"mrow\",\n  \"ms\",\n  \"mscarries\",\n  \"mscarry\",\n  \"msgroup\",\n  \"mstack\",\n  \"mstyle\",\n  \"msub\",\n  \"msubsup\",\n  \"msup\",\n  \"mtable\",\n  \"mtd\",\n  \"mtext\",\n  \"mtr\",\n  \"munder\",\n  \"munderover\",\n  \"semantics\",\n  \"annotation\",\n  \"annotation-xml\",\n]);\n","export const UNIT_LESS_PROPS = [\n  \"animationIterationCount\",\n  \"borderImageOutset\",\n  \"borderImageSlice\",\n  \"borderImageWidth\",\n  \"boxFlex\",\n  \"boxFlexGroup\",\n  \"boxOrdinalGroup\",\n  \"columnCount\",\n  \"flex\",\n  \"flexGrow\",\n  \"flexPositive\",\n  \"flexShrink\",\n  \"flexNegative\",\n  \"flexOrder\",\n  \"gridRow\",\n  \"gridColumn\",\n  \"fontWeight\",\n  \"lineClamp\",\n  \"lineHeight\",\n  \"opacity\",\n  \"order\",\n  \"orphans\",\n  \"tabSize\",\n  \"widows\",\n  \"zIndex\",\n  \"zoom\",\n  \"fillOpacity\",\n  \"floodOpacity\",\n  \"stopOpacity\",\n  \"strokeDasharray\",\n  \"strokeDashoffset\",\n  \"strokeMiterlimit\",\n  \"strokeOpacity\",\n  \"strokeWidth\",\n];\n","export * from \"./element-tags\";\nexport * from \"./unit-less-props\";\nexport const IS_SSR = typeof document === \"undefined\";\n","import { effect as reactor } from \"../reactivity\";\nimport { UNIT_LESS_PROPS } from \"~/const\";\n\n/**\n * apply the properties to the element\n *\n * @param $element - The element to apply the properties to.\n * @param props - The properties to apply.\n */\nexport function applyProps($element: HTMLElement | Element, props: Record<string, any>) {\n  for (const key in props) {\n    if (key.startsWith(\"on\") && typeof props[key] === \"function\") {\n      const type = key.slice(2).toLowerCase();\n      let cleanup: () => void;\n\n      reactor(() => {\n        // Remove the previous listener if there was one\n        if (cleanup) cleanup();\n\n        const fn = props[key]();\n        if (typeof fn === \"function\") {\n          $element.addEventListener(type, fn);\n          // Setup cleanup for next effect run\n          cleanup = () => $element.removeEventListener(type, fn);\n        }\n      });\n    } else {\n      reactor(() => {\n        const value = typeof props[key] === \"function\" ? props[key]() : props[key];\n\n        if (key === \"ref\" && typeof value === \"function\") {\n          value($element);\n        } else if (key === \"style\") {\n          applyStyle($element, value);\n        } else if (key === \"disabled\") {\n          $element.toggleAttribute(key, value);\n        } else {\n          $element.setAttribute(key, value);\n        }\n      });\n    }\n  }\n}\n\n/**\n * apply the style to the element\n *\n * @param $element - The element to apply the style to.\n * @param style - The style to apply.\n */\nfunction applyStyle($element: HTMLElement | Element, style: Record<string, any>) {\n  for (const [key, value] of Object.entries(style)) {\n    if (typeof value === \"number\" && !isUnitLessCSSProperty(key)) {\n      // @ts-ignore\n      $element.style[key] = `${value}px`;\n    } else {\n      // @ts-ignore\n      $element.style[key] = value;\n    }\n  }\n}\n\n/**\n * check if a property is a unitless CSS property\n *\n * @param prop - The property to check.\n * @returns True if the property is a unitless CSS property.\n */\nfunction isUnitLessCSSProperty(prop: string): boolean {\n  const unitLessProps = new Set(UNIT_LESS_PROPS);\n\n  return unitLessProps.has(prop);\n}\n","import { getNode, toArray } from \"~/util\";\nimport { effect, state } from \"~/reactivity\";\nimport { patch } from \"./render-children/patch\";\n\nexport const suspensePromise = state<Promise<void> | null>(null);\n\n/**\n * create a suspense component\n *\n * @param props - The properties of the component.\n * @returns The suspense component.\n */\nexport function Suspense(props: { fallback: JSX.Element; children: JSX.Element }) {\n  let $rootNode = document.createTextNode(\"\");\n  let $parent: Node;\n\n  // Change types since this is transformed by babel\n  const {\n    fallback: _fallback,\n    children: [children],\n  } = props as unknown as {\n    fallback: () => JSX.Element;\n    children: [() => JSX.Element[]];\n  };\n\n  const fallback = _fallback() as Node;\n\n  let isFirstRender = true;\n  let $oldNodes: Node[] = [];\n\n  const renderFallback = () => {\n    $oldNodes = patch($parent, $oldNodes, getNodes(fallback), isFirstRender);\n    isFirstRender = false;\n  };\n\n  const renderSuspenseChildren = () => {\n    const $newNodes = getNodes(children()).flat() as Node[];\n    $oldNodes = patch($parent, $oldNodes, $newNodes, isFirstRender);\n  };\n\n  queueMicrotask(() => {\n    $parent = $rootNode.parentNode as Node;\n\n    effect(() => {\n      try {\n        if (!$parent) return;\n        renderFallback();\n\n        if (suspensePromise.value) throw suspensePromise.value;\n\n        renderSuspenseChildren();\n      } catch (errorOrPromise) {\n        if (errorOrPromise instanceof Promise) {\n          errorOrPromise\n            .then(() => {\n              suspensePromise.value = null;\n              renderSuspenseChildren();\n            })\n            .catch(() => {});\n        } else {\n          throw errorOrPromise;\n        }\n      }\n    });\n  });\n\n  // initial render is fallback node\n  return $rootNode;\n}\n\nconst getNodes = <T extends JSX.Element | Node>(items: T) => {\n  const results: T[] = [];\n  const flatItems = toArray(items);\n\n  for (const item of flatItems) {\n    const node = getNode(item); // Throws here if resource.value is pending\n    if (Array.isArray(node)) {\n      results.push(...(node as T[]));\n    } else {\n      results.push(node as T);\n    }\n  }\n\n  return results;\n};\n","import { Suspense } from \"../suspense\";\n\nconst IGNORE_COMPONENT = [Suspense] as Function[];\n\n/**\n * resolve the component props\n *\n * @param type - The type of the component.\n * @param props - The properties of the component.\n */\nexport function resolveComponentProps(type: Function, props: Record<string, any>) {\n  if (IGNORE_COMPONENT.includes(type)) return;\n\n  for (const key in props) {\n    props[key] = props[key] instanceof Function ? props[key]() : props[key];\n  }\n}\n","import { untrack } from \"~/reactivity\";\nimport { LifecycleContext, initializeLifecycleContext, registerLifeCycles } from \"~/life-cycle\";\nimport { resolveComponentProps } from \"./resolve-component-props\";\n\nexport const componentRootNodes = new Set<Node>();\n\n/**\n * mount a component\n *\n * @param type - The type of the component.\n * @param props - The properties of the component.\n * @param children - The children of the component.\n */\nexport function mountComponent(\n  type: Function,\n  props: Record<string, any>,\n  children: JSX.Element[],\n) {\n  resolveComponentProps(type, props);\n\n  const lifecycleContext: LifecycleContext = {\n    mount: [],\n    effect: [],\n    destroy: [],\n  };\n\n  initializeLifecycleContext(lifecycleContext);\n\n  let $node = untrack(() => type({ ...props, children }));\n  let $target = $node;\n\n  if (Array.isArray($node)) {\n    $target = document.createTextNode(\"\");\n    $node.unshift($target);\n  }\n\n  registerLifeCycles(lifecycleContext, $target);\n\n  componentRootNodes.add($target);\n  return $node;\n}\n","import { IS_SSR } from \"./const\";\nimport { Fragment, h, hSSR } from \"./render\";\nimport { toArray } from \"./util\";\n\nimport \"./jsx.d\";\n\n/**\n * jsx runtime\n *\n * @param type - The type of the element.\n * @param props - The properties of the element.\n * @param children - The children of the element.\n * @returns The JSX element.\n */\nconst jsx = (type: string | Function, { children = [], ...props }: Record<string, any>) => {\n  if (IS_SSR) {\n    return hSSR(type, props, toArray(children));\n  }\n\n  return h(type, props, toArray(children));\n};\n\nexport { jsx, jsx as jsxs, Fragment };\n","import { renderChildren } from \"./render-children\";\nimport { applyProps } from \"./apply-props\";\nimport { mountComponent } from \"./mount-component\";\nimport { MATH_ML_TAGS, SVG_TAGS } from \"~/const\";\nimport { Fragment } from \"~/jsx-runtime\";\n\n/**\n * create a JSX element\n *\n * @param type - The type of the element.\n * @param props - The properties of the element.\n * @param children - The children of the element.\n * @returns The JSX element.\n */\nexport function h(type: string | Function, props: Record<string, any>, children: JSX.Element[]) {\n  if (type === Fragment) {\n    return children;\n  }\n\n  if (typeof type === \"function\") {\n    return mountComponent(type, props, children);\n  }\n\n  const $element = createElement(type, props.xmlns);\n\n  applyProps($element, props);\n  renderChildren($element, children);\n\n  return $element;\n}\n\nfunction createElement(tag: string, namespace?: string) {\n  if ((SVG_TAGS.has(tag) || MATH_ML_TAGS.has(tag)) && namespace) {\n    return document.createElementNS(namespace, tag);\n  }\n\n  return document.createElement(tag);\n}\n","export function hSSR(\n  type: string | Function,\n  props: Record<string, any>,\n  children: JSX.Element[]\n) {\n  if (typeof type === \"function\") {\n    return type({ ...props, children });\n  }\n\n  return `<${type} ${handlePropsSSR(props)}>${handleChildrenSSR(\n    children\n  )}</${type}>`;\n}\n\nfunction handlePropsSSR(props: Record<string, any>) {\n  const transformedProps: string[] = [];\n\n  for (const key in props) {\n    if (key.startsWith(\"on\") && typeof props[key] === \"function\") {\n      continue;\n    }\n\n    const value = typeof props[key] === \"function\" ? props[key]() : props[key];\n\n    if (key === \"ref\" && typeof value === \"function\") {\n      // value($element);\n    } else if (key === \"style\") {\n      // applyStyle($element, value);\n    } else if (key === \"disabled\") {\n      value && transformedProps.push(\"disabled\");\n    } else {\n      transformedProps.push(`${key}=\\\"${value}\\\"`);\n    }\n  }\n\n  return transformedProps.join(\" \");\n}\n\nfunction handleChildrenSSR(children: JSX.Element[]) {\n  let transformedChildren: string[] = [];\n\n  for (const child of children) {\n    if (typeof child === \"function\") {\n      transformedChildren.push(String(child()));\n    } else if (Array.isArray(child)) {\n      // RECURSIVELY flatten nested arrays\n      child.forEach((nested) =>\n        transformedChildren.push(handleChildrenSSR([nested]))\n      );\n    } else {\n      // console.log(child);\n      transformedChildren.push(child as string);\n      // return child\n      // const childRef = getNode(child) as Node;\n\n      // $parent.appendChild(childRef);\n      // mountSpecialComponent(childRef);\n    }\n  }\n\n  return transformedChildren.join(\"\");\n}\n","export function Fragment({ children }: { children: JSX.Element[] }) {\n  return children;\n}\n","/**\n * check if a value is null, undefined, or false\n *\n * @param value - The value to check if it is null, undefined, or false.\n * @returns True if the value is null, undefined, or false.\n */\nexport const isNil = (value: unknown): value is null | undefined | false => {\n  return value === undefined || value === null || value === false;\n};\n","import { isNil } from \"./is-node-nil\";\n\n/**\n * get the node for a JSX element\n *\n * @param jsxElement - The JSX element to get the node for.\n * @returns The node for the JSX element.\n */\nexport function getNode(jsxElement: JSX.Element): undefined | Node | (Node | undefined)[] {\n  if (jsxElement instanceof Node) {\n    return jsxElement;\n  }\n\n  if (isNil(jsxElement)) {\n    return undefined;\n  }\n\n  if (typeof jsxElement === \"function\") {\n    return getNode(jsxElement());\n  }\n\n  if (Array.isArray(jsxElement)) {\n    return jsxElement.map(getNode) as (Node | undefined)[];\n  }\n\n  return document.createTextNode(String(jsxElement));\n}\n","/**\n * convert an item to an array\n *\n * @param item - The item to convert to an array.\n * @returns The item as an array.\n */\nexport const toArray = <T>(item: T) => {\n  return (Array.isArray(item) ? item : [item]).flat(Infinity) as T[];\n};\n","/**\n * observe a node and call a callback when it is reattached\n *\n * @param callback - The callback to call when the node is reattached.\n * @param $node - The node to observe.\n */\nexport function onNodeReattached(callback: () => void, $node: Node) {\n  // Create a MutationObserver instance\n  const observer = new MutationObserver((mutationsList) => {\n    for (const mutation of mutationsList) {\n      // Check for added nodes\n      for (const node of mutation.addedNodes) {\n        if (node === $node) {\n          observer.disconnect();\n          callback();\n          break;\n        }\n      }\n    }\n  });\n\n  queueMicrotask(() => {\n    if (!$node.parentNode) {\n      return;\n    }\n\n    observer.observe($node.parentNode, { childList: true, subtree: true });\n  });\n}\n","import { setDestroyContext, setEffectContext, setMountContext } from \"~/context\";\nimport { removeEffect } from \"../reactivity\";\nimport { EffectFn } from \"../reactivity\";\nimport { registerComponentCleanup } from \"./component-cleanup\";\nimport { DestroyFn } from \"./on-destroy\";\nimport { MountFn } from \"./on-mount\";\nimport { onNodeReattached } from \"~/util\";\n\nexport type LifecycleContext = {\n  mount: MountFn[];\n  effect: EffectFn[];\n  destroy: DestroyFn[];\n};\n\nexport function registerLifeCycles(context: LifecycleContext, $target: Node) {\n  const cleanups: (() => void)[] = [];\n\n  setMountContext(null);\n  setEffectContext(null);\n  setDestroyContext(null);\n\n  registerComponentCleanup($target, cleanups);\n\n  // Pass cleanups once dom is painted\n  queueMicrotask(() => {\n    cleanups.push(\n      ...context.destroy,\n      ...context.mount.map((fn) => fn()).filter((c) => !!c),\n      ...context.effect.map((fn) => () => removeEffect(fn)),\n    );\n  });\n\n  // Re-run effect and memo when node is reattached\n  onNodeReattached(() => {\n    cleanups.push(...context.mount.map((fn) => fn()).filter((c) => !!c));\n  }, $target);\n}\n"],"names":["destroyContext","mountContext","effect","state","reactor"],"mappings":"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"}